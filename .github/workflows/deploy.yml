name: Selective Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - deploy

jobs:
  check-changes:
    name: Check which services changed
    runs-on: ubuntu-latest
    outputs:
      front: ${{ steps.filter.outputs.front }}
      back: ${{ steps.filter.outputs.back }}
      model: ${{ steps.filter.outputs.model }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changed paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            front:
              - 'front/**'
            back:
              - 'back/**'
              - '!back/model_server/**'
            model:
              - 'back/model_server/**'

  deploy-front:
    name: Deploy Frontend
    needs: check-changes
    if: needs.check-changes.outputs.front == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and Push Docker Image
        run: |
          cd front
          docker build -t gcr.io/chatbot-deploy-457312/web-server .
          docker push gcr.io/chatbot-deploy-457312/web-server

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy web-server \
            --image gcr.io/chatbot-deploy-457312/web-server \
            --platform managed \
            --region asia-northeast3 \
            --allow-unauthenticated \
            --memory 2Gi \
            --set-env-vars OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

  deploy-back:
    name: Deploy Backend
    needs: check-changes
    if: needs.check-changes.outputs.back == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build Spring Boot
        run: |
          cd back
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      - name: Build and Push Docker Image
        run: |
          cd back
          docker build -t gcr.io/chatbot-deploy-457312/my-backend .
          docker push gcr.io/chatbot-deploy-457312/my-backend

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy my-backend \
            --image gcr.io/chatbot-deploy-457312/my-backend \
            --platform managed \
            --region asia-northeast3 \
            --port 8080 \
            --allow-unauthenticated \
            --set-env-vars DB_HOST=34.64.69.195,DB_PORT=5432,DB_NAME=sound_of_mind,DB_USER=postgres,DB_PASS=1111,SPRING_PROFILES_ACTIVE=prod

  deploy-model:
    name: Deploy Model Server
    needs: check-changes
    if: needs.check-changes.outputs.model == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and Push Docker Image
        run: |
          docker build -t model_server \
            -f back/model_server/Dockerfile \
            .
          docker tag model_server gcr.io/chatbot-deploy-457312/model-server
          docker push gcr.io/chatbot-deploy-457312/model-server

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy model-server \
            --image gcr.io/chatbot-deploy-457312/model-server \
            --platform managed \
            --region asia-northeast3 \
            --allow-unauthenticated \
            --memory 2Gi \
            --set-env-vars OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
